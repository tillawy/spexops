{
  "$schema": "https://raw.githubusercontent.com/jetify-com/devbox/0.11.0/.schema/devbox.schema.json",
  "env": {
    "DEVOBX_MESSAGE":                      "Welcome to SpexOps-Backend/DevBox!",
    "PGPORT":                              "5433",
    "PGHOST":                              "/tmp/",
    "OBJC_DISABLE_INITIALIZE_FORK_SAFETY": "YES"
  },
  "env_from": ".env",
  "packages": {
    "glibcLocales": {
      "version":   "latest",
      "platforms": ["aarch64-linux"]
    },
    "yq": "latest",
    "libyaml": {
      "version": "latest",
      "outputs": [
        "out",
        "dev"
      ]
    },
    "postgresql_16": {
      "version": "latest"
    },
    "go-task":   "latest",
    "git":       "latest",
    "gcc":       "latest",
    "ruby":      "latest",
    "go":        "latest",
    "shadowenv": "latest",
    "opentofu":  "latest"
  },
  "shell": {
    "init_hook": [
      "echo 'Welcome to SpexOps-Backend/DevBox!' > /dev/null",
      "ls ${PGDATA}/PG_VERSION || initdb -D ${PGDATA} ",
      "echo \"GOROOT=$(go env GOROOT)\"",
      "devbox run copy_pg_conf",
      "devbox run patch_pg_service"
    ],
    "scripts": {
      "tailwindcss:build": [
        "bundle exec rails tailwindcss:build"
      ],
      "tailwindcss:watch": [
        "bundle exec rails tailwindcss:watch"
      ],
      "test": [
        "echo \"Error: no test specified\" && exit 1"
      ],
      "copy_pg_conf": [
        "cp devbox.d/postgresql_16/pg_hba.conf .devbox/virtenv/postgresql_16/data/",
        "cp devbox.d/postgresql_16/postgresql.conf .devbox/virtenv/postgresql_16/data/"
      ],
      "patch_pg_service": [
        "yq --yaml-output --in-place '.processes.postgresql.command = \"pg_ctl start -o \\\"-k /tmp/ -p $PGPORT  \\\"\"' .devbox/virtenv/postgresql_16/process-compose.yaml"
      ],
      "install_pg_vector": [
        "echo 'Installing pg_vector extension'",
        "cd /tmp",
        "git clone --branch v0.7.1 https://github.com/pgvector/pgvector.git",
        "cd ./pgvector",
        "make",
        "make install",
        "cd /tmp",
        "rm -rf /tmp/pgvector"
      ],
      "install_pg_cron": [
        "echo 'Installing pg_cron extension'",
        "cd /tmp",
        "rm -rf ./pg_cron",
        "git clone https://github.com/citusdata/pg_cron.git",
        "cd ./pg_cron",
        "make CC=gcc",
        "make install",
        "cd /tmp",
        "rm -rf /tmp/pg_cron"
      ],
      "install_pg_hint": [
        "echo 'Installing pg_hint extension'",
        "cd /tmp",
        "wget https://github.com/ossc-db/pg_hint_plan/archive/refs/tags/REL16_1_6_0.tar.gz",
        "tar xzvf ./REL16_1_6_0.tar.gz",
        "cd ./pg_hint_plan-REL16_1_6_0",
        "make",
        "make install",
        "cd /tmp",
        "rm -rf ./pg_hint_plan-REL16_1_6_0"
      ],
      "docker_compose_keycloak_up": [
        "docker compose --project-directory=./keycloak/docker/ up"
      ],
      "docker_compose_keycloak_rm": [
        "docker compose --project-directory=./keycloak/docker/ rm -f"
      ],
      "tofu_keycloak": [
        "tofu -chdir=./keycloak/tofu/ apply -auto-approve"
      ]
    }
  }
}
