name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: spexops
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          DB_USERNAME: "spexops"
          DB_PASSWORD: "secret"
          DATABASE_SUPER_USERNAME: "spexops"
          DATABASE_SUPER_PASSWORD: "secret"
          DATABASE_CACHE_RW_URL: "postgresql://localhost:5432/"
          DATABASE_CACHE_RO_URL: "postgresql://localhost:5432/"
          DATABASE_QUEUE_RW_URL: "postgresql://localhost:5432/"
          DATABASE_QUEUE_RO_URL: "postgresql://localhost:5432/"
          DATABASE_PRIMARY_RW_URL: "postgresql://localhost:5432/"
          DATABASE_PRIMARY_RO_URL: "postgresql://localhost:5432/"
          DATABASE_ACCOUNTS_RW_URL: "postgresql://localhost:5432/"
          DATABASE_ACCOUNTS_RO_URL: "postgresql://localhost:5432/"
          DATABASE_PROJECTS_RW_URL: "postgresql://localhost:5432/"
          DATABASE_PROJECTS_RO_URL: "postgresql://localhost:5432/"
          DATABASE_FEATURES_RW_URL: "postgresql://localhost:5432/"
          DATABASE_FEATURES_RO_URL: "postgresql://localhost:5432/"
          DATABASE_SUITES_RW_URL: "postgresql://localhost:5432/"
          DATABASE_SUITES_RO_URL: "postgresql://localhost:5432/"
          DATABASE_SPECS_RW_URL: "postgresql://localhost:5432/"
          DATABASE_SPECS_RO_URL: "postgresql://localhost:5432/"
          DATABASE_VERSIONS_RW_URL: "postgresql://localhost:5432/"
          DATABASE_VERSIONS_RO_URL: "postgresql://localhost:5432/"
          ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY: "deterministickeyaaaaaaaaaaaaaaaa"
          ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT: "keyderivationsaltbbbbbbbbbbbbbbb"
          ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: "primarykeycccccccddddddddddddddd"
        run: bin/rails db:test:prepare && bundle exec rspec --format documentation

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  build_container:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v4
      -
        name: write package.json
        uses: mikefarah/yq@master
        with:
          cmd: yq --output-format=json -i '.sha = "${{ github.sha }}"' ./info.json
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: tillawy/spexops
          tags: |
            type=raw,value=${{ github.sha }}
      -
        name: Docker buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push container image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64

  ###### DEPLOY
  deploy:
    runs-on: ubuntu-latest
    needs: [ build_container ]
    steps:
      -
        name: ArgoCD Checkout
        uses: actions/checkout@v4
        with:
          repository: 'tillawy/spexops-argocd-production'
          ref: 'main'
          ssh-key:  ${{ secrets.ARGOCD_SSH_DEPLOY_KEY }}
          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: ''
      -
        name: ArgoCD write target image tag
        uses: mikefarah/yq@master
        with:
          cmd: yq --output-format=yaml -i '.apps.spexops.tag = "tillawy/spexops:${{ github.sha }}"' apps/values.yaml
      -
        name: ArgoCD debug  ./apps/templates/05-spexops.yaml
        uses: mikefarah/yq@master
        with:
          cmd: cat ./apps/values.yaml
      -
        name: Commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Deploy at $(date +'%Y-%m-%dT%H:%M:%S')"
      -
        name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: "main"
          repository: 'tillawy/spexops-argocd-production'
          ssh: true
